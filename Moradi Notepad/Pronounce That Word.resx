<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MjAtMDU6MDC0vn79AAAAAElFTkSuQmCC
</value>
  </data>
</root>